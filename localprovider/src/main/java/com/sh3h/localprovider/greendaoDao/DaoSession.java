package com.sh3h.localprovider.greendaoDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sh3h.localprovider.greendaoEntity.Address;
import com.sh3h.localprovider.greendaoEntity.BranchAccept;
import com.sh3h.localprovider.greendaoEntity.Budget;
import com.sh3h.localprovider.greendaoEntity.ConstructionAccept;
import com.sh3h.localprovider.greendaoEntity.Material;
import com.sh3h.localprovider.greendaoEntity.MaterialApply;
import com.sh3h.localprovider.greendaoEntity.MaterialVerify;
import com.sh3h.localprovider.greendaoEntity.MultiMedia;
import com.sh3h.localprovider.greendaoEntity.Operate;
import com.sh3h.localprovider.greendaoEntity.Patrol;
import com.sh3h.localprovider.greendaoEntity.Project;
import com.sh3h.localprovider.greendaoEntity.ProjectAccept;
import com.sh3h.localprovider.greendaoEntity.Violation;
import com.sh3h.localprovider.greendaoEntity.Word;

import com.sh3h.localprovider.greendaoDao.AddressDao;
import com.sh3h.localprovider.greendaoDao.BranchAcceptDao;
import com.sh3h.localprovider.greendaoDao.BudgetDao;
import com.sh3h.localprovider.greendaoDao.ConstructionAcceptDao;
import com.sh3h.localprovider.greendaoDao.MaterialDao;
import com.sh3h.localprovider.greendaoDao.MaterialApplyDao;
import com.sh3h.localprovider.greendaoDao.MaterialVerifyDao;
import com.sh3h.localprovider.greendaoDao.MultiMediaDao;
import com.sh3h.localprovider.greendaoDao.OperateDao;
import com.sh3h.localprovider.greendaoDao.PatrolDao;
import com.sh3h.localprovider.greendaoDao.ProjectDao;
import com.sh3h.localprovider.greendaoDao.ProjectAcceptDao;
import com.sh3h.localprovider.greendaoDao.ViolationDao;
import com.sh3h.localprovider.greendaoDao.WordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig addressDaoConfig;
    private final DaoConfig branchAcceptDaoConfig;
    private final DaoConfig budgetDaoConfig;
    private final DaoConfig constructionAcceptDaoConfig;
    private final DaoConfig materialDaoConfig;
    private final DaoConfig materialApplyDaoConfig;
    private final DaoConfig materialVerifyDaoConfig;
    private final DaoConfig multiMediaDaoConfig;
    private final DaoConfig operateDaoConfig;
    private final DaoConfig patrolDaoConfig;
    private final DaoConfig projectDaoConfig;
    private final DaoConfig projectAcceptDaoConfig;
    private final DaoConfig violationDaoConfig;
    private final DaoConfig wordDaoConfig;

    private final AddressDao addressDao;
    private final BranchAcceptDao branchAcceptDao;
    private final BudgetDao budgetDao;
    private final ConstructionAcceptDao constructionAcceptDao;
    private final MaterialDao materialDao;
    private final MaterialApplyDao materialApplyDao;
    private final MaterialVerifyDao materialVerifyDao;
    private final MultiMediaDao multiMediaDao;
    private final OperateDao operateDao;
    private final PatrolDao patrolDao;
    private final ProjectDao projectDao;
    private final ProjectAcceptDao projectAcceptDao;
    private final ViolationDao violationDao;
    private final WordDao wordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        addressDaoConfig = daoConfigMap.get(AddressDao.class).clone();
        addressDaoConfig.initIdentityScope(type);

        branchAcceptDaoConfig = daoConfigMap.get(BranchAcceptDao.class).clone();
        branchAcceptDaoConfig.initIdentityScope(type);

        budgetDaoConfig = daoConfigMap.get(BudgetDao.class).clone();
        budgetDaoConfig.initIdentityScope(type);

        constructionAcceptDaoConfig = daoConfigMap.get(ConstructionAcceptDao.class).clone();
        constructionAcceptDaoConfig.initIdentityScope(type);

        materialDaoConfig = daoConfigMap.get(MaterialDao.class).clone();
        materialDaoConfig.initIdentityScope(type);

        materialApplyDaoConfig = daoConfigMap.get(MaterialApplyDao.class).clone();
        materialApplyDaoConfig.initIdentityScope(type);

        materialVerifyDaoConfig = daoConfigMap.get(MaterialVerifyDao.class).clone();
        materialVerifyDaoConfig.initIdentityScope(type);

        multiMediaDaoConfig = daoConfigMap.get(MultiMediaDao.class).clone();
        multiMediaDaoConfig.initIdentityScope(type);

        operateDaoConfig = daoConfigMap.get(OperateDao.class).clone();
        operateDaoConfig.initIdentityScope(type);

        patrolDaoConfig = daoConfigMap.get(PatrolDao.class).clone();
        patrolDaoConfig.initIdentityScope(type);

        projectDaoConfig = daoConfigMap.get(ProjectDao.class).clone();
        projectDaoConfig.initIdentityScope(type);

        projectAcceptDaoConfig = daoConfigMap.get(ProjectAcceptDao.class).clone();
        projectAcceptDaoConfig.initIdentityScope(type);

        violationDaoConfig = daoConfigMap.get(ViolationDao.class).clone();
        violationDaoConfig.initIdentityScope(type);

        wordDaoConfig = daoConfigMap.get(WordDao.class).clone();
        wordDaoConfig.initIdentityScope(type);

        addressDao = new AddressDao(addressDaoConfig, this);
        branchAcceptDao = new BranchAcceptDao(branchAcceptDaoConfig, this);
        budgetDao = new BudgetDao(budgetDaoConfig, this);
        constructionAcceptDao = new ConstructionAcceptDao(constructionAcceptDaoConfig, this);
        materialDao = new MaterialDao(materialDaoConfig, this);
        materialApplyDao = new MaterialApplyDao(materialApplyDaoConfig, this);
        materialVerifyDao = new MaterialVerifyDao(materialVerifyDaoConfig, this);
        multiMediaDao = new MultiMediaDao(multiMediaDaoConfig, this);
        operateDao = new OperateDao(operateDaoConfig, this);
        patrolDao = new PatrolDao(patrolDaoConfig, this);
        projectDao = new ProjectDao(projectDaoConfig, this);
        projectAcceptDao = new ProjectAcceptDao(projectAcceptDaoConfig, this);
        violationDao = new ViolationDao(violationDaoConfig, this);
        wordDao = new WordDao(wordDaoConfig, this);

        registerDao(Address.class, addressDao);
        registerDao(BranchAccept.class, branchAcceptDao);
        registerDao(Budget.class, budgetDao);
        registerDao(ConstructionAccept.class, constructionAcceptDao);
        registerDao(Material.class, materialDao);
        registerDao(MaterialApply.class, materialApplyDao);
        registerDao(MaterialVerify.class, materialVerifyDao);
        registerDao(MultiMedia.class, multiMediaDao);
        registerDao(Operate.class, operateDao);
        registerDao(Patrol.class, patrolDao);
        registerDao(Project.class, projectDao);
        registerDao(ProjectAccept.class, projectAcceptDao);
        registerDao(Violation.class, violationDao);
        registerDao(Word.class, wordDao);
    }
    
    public void clear() {
        addressDaoConfig.clearIdentityScope();
        branchAcceptDaoConfig.clearIdentityScope();
        budgetDaoConfig.clearIdentityScope();
        constructionAcceptDaoConfig.clearIdentityScope();
        materialDaoConfig.clearIdentityScope();
        materialApplyDaoConfig.clearIdentityScope();
        materialVerifyDaoConfig.clearIdentityScope();
        multiMediaDaoConfig.clearIdentityScope();
        operateDaoConfig.clearIdentityScope();
        patrolDaoConfig.clearIdentityScope();
        projectDaoConfig.clearIdentityScope();
        projectAcceptDaoConfig.clearIdentityScope();
        violationDaoConfig.clearIdentityScope();
        wordDaoConfig.clearIdentityScope();
    }

    public AddressDao getAddressDao() {
        return addressDao;
    }

    public BranchAcceptDao getBranchAcceptDao() {
        return branchAcceptDao;
    }

    public BudgetDao getBudgetDao() {
        return budgetDao;
    }

    public ConstructionAcceptDao getConstructionAcceptDao() {
        return constructionAcceptDao;
    }

    public MaterialDao getMaterialDao() {
        return materialDao;
    }

    public MaterialApplyDao getMaterialApplyDao() {
        return materialApplyDao;
    }

    public MaterialVerifyDao getMaterialVerifyDao() {
        return materialVerifyDao;
    }

    public MultiMediaDao getMultiMediaDao() {
        return multiMediaDao;
    }

    public OperateDao getOperateDao() {
        return operateDao;
    }

    public PatrolDao getPatrolDao() {
        return patrolDao;
    }

    public ProjectDao getProjectDao() {
        return projectDao;
    }

    public ProjectAcceptDao getProjectAcceptDao() {
        return projectAcceptDao;
    }

    public ViolationDao getViolationDao() {
        return violationDao;
    }

    public WordDao getWordDao() {
        return wordDao;
    }

}
